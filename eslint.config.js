const importPlugin = require("eslint-plugin-import");
const react = require('eslint-plugin-react');
const jest = require('eslint-plugin-jest');
const prettier = require('eslint-plugin-prettier');
const jxsa11y = require('eslint-plugin-jsx-a11y');
const babelParser = require('@babel/eslint-parser');


module.exports = {
  languageOptions: {
    parser: babelParser,
  },
  plugins: { import: importPlugin, react, jest, prettier, jxsa11y },
  rules: {
    'react/destructuring-assignment': 0,
    'class-methods-use-this': 0,
    'no-plusplus': 0,
    'no-console': 0,
    'no-param-reassign': ['error', { props: false }],
    'import/no-extraneous-dependencies': ['error', { packageDir: __dirname }],
    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx'] }],
    'react-hooks/rules-of-hooks': 0,
    'react/prefer-stateless-function': 0,
    'react/forbid-prop-types': 0,
    'react/no-children-prop': 0,
    'no-nested-ternary': 0,
    'prefer-regex-literals': 0,
    'jest/no-commented-out-tests': 0,
    'jest/no-standalone-expect': 0,
    'jest/expect-expect': 0,
    'no-unused-vars': 0,
  },
  settings: {
    'import/resolver': {
      webpack: {
        config: require.resolve('./configs/webpack.config.eslint.js'),
      },
    },
  },
  ignores: [
    // Logs
    'logs',
    '*.log',

    // Runtime data
    'pids',
    '*.pid',
    '*.seed',

    // Directory for instrumented libs generated by jscoverage/JSCover
    'lib-cov',

    // Coverage directory used by tools like istanbul
    'coverage',

    // Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
    '.grunt',

    // node-waf configuration
    '.lock-wscript',

    // Compiled binary addons (http://nodejs.org/api/addons.html)
    'build/Release',
    '.eslintcache',

    // Dependency directory
    // https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git
    'node_modules',

    // OSX
    '.DS_Store',

    // flow-typed
    'flow-typed/npm/*',
    '!flow-typed/npm/module_vx.x.x.js',

    // App packaged
    'release',
    'app/main.prod.js',
    'app/main.prod.js.map',
    'app/renderer.prod.js',
    'app/renderer.prod.js.map',
    'app/style.css',
    'app/style.css.map',
    'app/dist/*',
    'dist',
    'dll/*.js',
    'main.js',
    'main.js.map',

    '.idea',
    'npm-debug.log.*',
    '__snapshots__',

    // Package.json
    'package.json',
    '.travis.yml',

    'configs/*.cjs'
  ]
};
